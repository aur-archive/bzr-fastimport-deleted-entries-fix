diff --git a/exporter.py b/exporter.py
index 6d1a9c0..d1b358f 100644
--- a/exporter.py
+++ b/exporter.py
@@ -413,6 +413,7 @@ class BzrFastExporter(object):
         #
         # 1) bzr rm a; bzr mv b a; bzr commit
         # 2) bzr mv x/y z; bzr rm x; commmit
+        # 3) bzr mv x y; bzr rm y/z; bzr commit
         #
         # The first must come out with the delete first like this:
         #
@@ -424,6 +425,11 @@ class BzrFastExporter(object):
         # R x/y z
         # D x
         #
+        # The third case must come out with delete first like this:
+        #
+        # D x/z
+        # R x y
+        #
         # So outputting all deletes first or all renames first won't work.
         # Instead, we need to make multiple passes over the various lists to
         # get the ordering right.
@@ -431,6 +437,7 @@ class BzrFastExporter(object):
         must_be_renamed = {}
         old_to_new = {}
         deleted_paths = set([p for p, _, _ in deletes])
+        deleted_child_paths = set()
         for (oldpath, newpath, id_, kind,
                 text_modified, meta_modified) in renames:
             emit = kind != 'directory' or not self.plain_format
@@ -442,6 +449,17 @@ class BzrFastExporter(object):
                 self.note("Skipping empty dir %s in rev %s" % (oldpath,
                     revision_id))
                 continue
+
+            if kind == 'directory':
+                # handling deleted children in renamed directory (case 3 above)
+                for p, e in tree_old.inventory.iter_entries_by_dir(from_dir=id_):
+                    old_child_path = osutils.pathjoin(oldpath, p)
+                    new_child_path = osutils.pathjoin(newpath, p)
+                    if old_child_path in deleted_paths:
+                        file_cmds.append(commands.FileDeleteCommand(old_child_path.encode("utf-8")))
+                        deleted_paths.remove(old_child_path)
+                        deleted_child_paths.add(old_child_path)
+
             #oldpath = self._adjust_path_for_renames(oldpath, renamed,
             #    revision_id)
             renamed.append([oldpath, newpath])
@@ -460,6 +478,8 @@ class BzrFastExporter(object):
                         continue
                     old_child_path = osutils.pathjoin(oldpath, p)
                     new_child_path = osutils.pathjoin(newpath, p)
+                    if old_child_path in deleted_child_paths:
+                        continue
                     must_be_renamed[old_child_path] = new_child_path
 
         # Add children not already renamed
